@inject IProductServiceInterface ProductService
@implements IDisposable

<div class="mainpagetitle">
        <h1>Vítejte na TM Eshopu</h1>
</div>

<div class="propage">
    
    @if(ProductService.Products == null || ProductService.Products.Count == 0)
{
    <span>@ProductService.Message</span>      
}
else
{
    <div class="bestsell">
        <div>
            <h1>Nejprodávanější</h1>
        </div>
        <div class="bestsellbody">
        @foreach (var product in ProductService.Products){
            @if (product.ProId.Equals(1512372)){
                <a href="product/@product.ProId">
                    <div class="productbox">
                        <div class="boxname">
                            <h4>@product.Name</h4>
                        </div>
                        <div class="boximg">
                            <img src="@product.ImageUrl">
                        </div>
                        <div class="boxprice">
                            <p>@product.Price.ToString("N2", CultureInfo.CreateSpecificCulture("en-US")) Kč</p>
                        </div>
                    </div>
                </a>
            }
            @if (product.ProId.Equals(1534618)){
                <a href="product/@product.ProId">
                    <div class="productbox">
                        <div class="boxname">
                            <h4>@product.Name</h4>
                        </div>
                        <div class="boximg">
                            <img src="@product.ImageUrl">
                        </div>
                        <div class="boxprice">
                            <p>@product.Price.ToString("N2", CultureInfo.CreateSpecificCulture("en-US")) Kč</p>
                        </div>
                    </div>
                </a>
            }
        
        }
        </div>
    </div>
}
</div>

@code {
    protected override void OnInitialized()
    {
        ProductService.ProductChanged += StateHasChanged;
    }
    public void Dispose()
    {
        ProductService.ProductChanged -= StateHasChanged;
    }
}
